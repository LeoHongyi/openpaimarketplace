openapi: 3.0.0
info:
  version: "2.0.0"
  title: "Marketplace API"
tags:
  - name: Item
  - name: User
  - name: Candidate
paths:
  /api/items:
    post:
      tags:
        - Item
      summary: Add a new marketplace item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketplaceItemReq"
      responses:
        201:
          description: Return item id if created successfully
          content:
            text/plain:
              schema:
                type: string
        405:
          $ref: "#/components/responses/InvalidInput"
    get:
      tags:
        - Item
      summary: List marketplace items
      parameters:
        - in: query
          name: author
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: category
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MarketplaceItemRes"

  /api/items/{itemId}:
    parameters:
      - name: itemId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Item
      summary: Get specific marketplace item info
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketplaceItemRes"
        404:
          $ref: "#/components/responses/404NotFound"
    put:
      tags:
        - Item
      summary: Update a marketplace item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketplaceItemReq"
      responses:
        200:
          description: OK
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/InvalidInput"
    delete:
      tags:
        - Item
      summary: delete a marketplace item
      responses:
        200:
          description: OK
        404:
          $ref: "#/components/responses/404NotFound"
  /api/items/{itemId}/description:
    parameters:
      - name: itemId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Item
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
        404:
          $ref: "#/components/responses/404NotFound"
    put:
      tags:
        - Item
      summary: Update a marketplace item description
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: OK
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/InvalidInput"

  /api/items/{itemId}/status:
    parameters:
      - name: itemId
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - Item
      summary: Update a marketplace item status (approved or rejected)
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: OK
        404:
          $ref: "#/components/responses/404NotFound"
        405:
          $ref: "#/components/responses/InvalidInput"

  /api/items/{itemId}/submits:
    parameters:
      - name: itemId
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - Item
      summary: Increase submits of a marketplace item
      responses:
        200:
          description: OK
        404:
          $ref: "#/components/responses/404NotFound"

  /api/items/{itemId}/starUsers:
    get:
      tags:
        - Item
      summary: Get star users of specific marketplace item
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        404:
          $ref: "#/components/responses/404NotFound"

  /api/users:
    post:
      tags:
        - User
      summary: Add a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        201:
          description: Return item id if created successfully
          content:
            text/plain:
              schema:
                type: string
        405:
          $ref: "#/components/responses/InvalidInput"
    get:
      tags:
        - User
      summary: List users
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"

  /api/users/{username}/starItems:
    get:
      tags:
        - User
      summary: list star items of a specific user
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MarketplaceItemRes"
        404:
          $ref: "#/components/responses/404NotFound"
  /api/users/{username}/starItems/{itemId}:
    parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      - name: itemId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - User
      summary: Get the stared marketplace item info of a user, 404 if user not stared
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketplaceItemRes"
        404:
          $ref: "#/components/responses/404NotFound"
    put:
      tags:
        - User
      summary: Star the marketplace item, 409 if already stared
      responses:
        200:
          description: OK
        409:
          description: Conflict
    delete:
      tags:
        - User
      summary: Unstar the item if stared, 404 if not stared
      responses:
        200:
          description: OK
        404:
          $ref: "#/components/responses/404NotFound"

components:
  schemas:
    MarketplaceItemReq:
      type: object
      properties:
        name:
          type: string
        author:
          type: string
        category:
          type: string
        introduction:
          type: string
        description:
          type: string
        jobConfig:
          type: object
        tags:
          type: array
          items:
            type: string
        status:
          type: string
          description: pending, approved or rejected
    MarketplaceItemRes:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        author:
          type: string
        createdAt:
          type: string
          format: "date-time"
        updatedAt:
          type: string
          format: "date-time"
        category:
          type: string
        introduction:
          type: string
        description:
          type: string
        jobConfig:
          type: object
        submits:
          type: number
        starNumber:
          type: number
        tags:
          type: array
          items:
            type: string
        status:
          type: string
          description: pending, approved or rejected
    User:
      type: object
      properties:
        name:
          type: string

  responses:
    404NotFound:
      description: The specified resource was not found.
    InvalidInput:
      description: Invalid input
