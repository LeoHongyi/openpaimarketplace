// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

/* eslint-disable no-template-curly-in-string */

export const MARKETPLACE_API_URL = process.env.MARKETPLACE_API_URL;

export const MARKET_ITEM_LIST = [
  {
    id: '0b41d10e-36e5-4e97-95c2-27726dd94f34',
    name: 'Couplet Dataset',
    author: 'OpenPAI',
    type: 'data',
    categories: 'AI couplet',
    tags: ['official example'],
    summary: 'Dataset of couplet',
    description:
      '# Couplet Dataset\n\nThis is the dataset of couplet. \n\n## Data content\n\nThis dataset contains processed data based on [Microsoft AI EDU project](https://github.com/microsoft/ai-edu/blob/master/B-%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/B13-AI%E5%AF%B9%E8%81%94%E7%94%9F%E6%88%90%E6%A1%88%E4%BE%8B/docs/fairseq.md).\n\nThe original dataset was downloaded from [Public couplet dataset](https://github.com/wb14123/couplet-dataset/releases) and was splited into ```test, train and valid``` with 98:1:1 proportion. The ```.up``` and ```.down``` files contains upper part and down part of a certain couplet seperately.\n\n## The file stucture\n\n```\n.\n|-- test.down // down part of couplet\n|-- test.up  // up part of couplet\n|-- train.down\n|-- train.up\n|-- valid.down\n|-- valid.up\n```\n\n## How to use it\n\nThe data will be mounted at ```DATA_DIR``` environment variable. You could use ```$DATA_DIR``` in your command when submit jobs in pai.\n\n\n',
    content: {
      dataStorage: {
        storageType: 'nfs',
        groups: ['default'],
        storageName: 'confignfs',
        serverPath: '10.151.40.235:/data/couplet_data',
        containerPath: '/mnt/confignfs/couplet_data',
      },
    },
    useNumber: 0,
    starNumber: 0,
    status: 'approved',
    createdAt: '2020-05-06T04:52:48.289Z',
    updatedAt: '2020-05-06T04:52:48.289Z',
  },
  {
    id: '8e0b3086-0359-4e75-b11c-c5527487626e',
    name: 'Couplet Training Job Template',
    author: 'OpenPAI',
    type: 'template',
    categories: 'AI couplet',
    tags: ['official example'],
    summary: 'This template will train a couplet model using fairseq',
    description:
      '# Couplet Training Model\n\nThis is a model training process. After training, this model will give a down part with an upper part of couplet. Please refer to Microsoft AI Edu Project for more details.\n\n## Training Data\n\nYou could use Couplet Dataset data component as training data, or any dataset follows fairseq model requirements.\n\n## How to use\n\nWhen use this module, you should set three environment variables:\n\n- ```DATA_DIR```: the training data path in container, by default it uses Couplet Dataset data component. If you want to use your own datasets. First make sure mount your data into container, and then change the ```$DATA_DIR``` with the path.\n\n- PREPROCESSED_DATA_DIR: the path to store intermediate result, by default it is ./processed_data.\n\n- ```OUTPUT_DIR```: the path to store output result, i.e. the training model files. By default it will mount a nfs storage, and you could change it with other mounted storage.\n\n## How to check the result\n\nAfter job finished successfully, you could check the output model files in the output storage. The storage server url is in details page.\n',
    content: {
      dockerImage: 'openpai/standard:python_3.6-pytorch_1.2.0-gpu',
      ports: [],
      dataStorage: {
        storageType: 'nfs',
        groups: ['default'],
        storageName: 'confignfs',
        serverPath: '10.151.40.235:/data/couplet_data',
        containerPath: '/mnt/confignfs/couplet_data',
      },
      codeStorage: null,
      outputStorage: {
        storageType: 'nfs',
        groups: ['default'],
        storageName: 'confignfs',
        serverPath: '10.151.40.235:/data/output',
        containerPath: '/mnt/confignfs/output',
      },
      commands: [
        'export PREPROCESSED_DATA_DIR=./preprocessed_data',
        'pip install fairseq',
        'fairseq-preprocess \\',
        '--source-lang up \\',
        '--target-lang down \\',
        '--trainpref ${DATA_DIR}/train \\',
        '--validpref ${DATA_DIR}/valid \\',
        '--testpref ${DATA_DIR}/test \\',
        '--destdir ${PREPROCESSED_DATA_DIR}',
        'fairseq-train ${PREPROCESSED_DATA_DIR} \\',
        '--log-interval 100 \\',
        '--lr 0.25 \\',
        '--clip-norm 0.1 \\',
        '--dropout 0.2  \\',
        '--criterion label_smoothed_cross_entropy \\',
        '--save-dir ${OUTPUT_DIR} \\',
        '-a lstm \\',
        '--max-tokens 4000 \\',
        '--max-epoch 100',
      ],
    },
    useNumber: 0,
    starNumber: 0,
    status: 'approved',
    createdAt: '2020-05-06T04:52:48.289Z',
    updatedAt: '2020-05-06T04:52:48.289Z',
  },
  {
    id: 'a493d4cf-a79e-490f-95c9-06900cdcbd98',
    name: 'Couplet Inference Job Template',
    author: 'OpenPAI',
    type: 'template',
    categories: 'AI couplet',
    tags: ['official example'],
    summary: 'This template will inference couplet models and give down part with upper part',
    description:
      '# Couplet Training Job Template\n\nThis is a model inference process. The input data is the trainning models trained by ```couplet training job```, and the this job will produce a url for user to ask for down part for a upper part of couplet.\n\n## How to use\n\nWhen use this module, you should set three environment variables:\n\n- ```DATA_DIR```: the training model path in container, by default it uses the output of couplet training job. If you want to use your own models. First make sure mount your models into container, and then change the ```$DATA_DIR``` with the path.\n\n- ```CODE_DIR```: the service code, it will start a server at the given port.\n\n- ```FLASK_RUN_PORT```: the service port container will output.\n\n## How to check the result\n\nAfter job finished successfully, you could check the job detail to get the container ip and ```flask_port``` number, then go to http://<ip>:<flask_port>/?upper=<input> to test the result.\n',
    content: {
      dockerImage: 'openpai/standard:python_3.6-pytorch_1.2.0-gpu',
      ports: ['FLASK_PORT'],
      dataStorage: {
        storageType: 'nfs',
        groups: ['default'],
        storageName: 'confignfs',
        serverPath: '10.151.40.235:/data/couplet/checkpoints',
        containerPath: '/mnt/confignfs/couplet/checkpoints',
      },
      codeStorage: {
        storageType: 'nfs',
        groups: ['default'],
        storageName: 'confignfs',
        serverPath: '10.151.40.235:/data/couplet',
        containerPath: '/mnt/confignfs/couplet',
      },
      commands: [
        'pip install fairseq',
        'pip install flask',
        'pip install gunicorn',
        'cd ${CODE_DIR}',
        'gunicorn --bind=0.0.0.0:${FLASK_PORT} app:app',
      ],
    },
    useNumber: 0,
    starNumber: 0,
    status: 'approved',
    createdAt: '2020-05-06T04:52:48.289Z',
    updatedAt: '2020-05-06T04:52:48.289Z',
  },
];
