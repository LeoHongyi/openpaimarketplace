name: Docker Build

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: webportal

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Test rest server compose
        run: |
          [ "${{github.event_name}}" == "pull_request" ] && export VERSION="${{github.head_ref}}"
          [ "${{github.event_name}}" != "pull_request" ] && export VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          echo "branch name: ${VERSION}"
          cd rest_server/deploy
          docker-compose config
          docker-compose up -d
          sleep 5
          curl http://localhost:3000
          curl http://localhost:3000/items

      - name: Test webportal image
        run: |
          [ "${{github.event_name}}" == "pull_request" ] && export VERSION="${{github.head_ref}}"
          [ "${{github.event_name}}" != "pull_request" ] && export VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          echo "branch name: ${VERSION}"
          cd webportal/deploy
          docker build . --tag debuggy/image --build-arg VERSION=${BRANCH}
          docker run -d -p 9292:9292 debuggy/image
          sleep 5
          curl http://localhost:9292/plugin.js

  # Push image to GitHub Packages.
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          # Strip git ref prefix from version
          export VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          echo "branch name: ${VERSION}"
          cd webportal/deploy
          docker build . --file Dockerfile --tag image --build-arg VERSION=${BRANCH}

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
